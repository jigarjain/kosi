name: Deploy to Vercel

on:
  push:
    branches:
      - main # Or your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Project Dependencies
        run: npm install

      - name: Set up Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Link Supabase Project
        run: |
          supabase link --project-ref ${{ secrets.KOSI_SUPABASE_PROJECT_ID }}
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.KOSI_SUPABASE_ACCESS_TOKEN }} # Added token here too for consistency
          SUPABASE_DB_PASSWORD: ${{ secrets.KOSI_SUPABASE_DB_PASSWORD }}

      - name: Deploy Database Migrations
        run: |
          supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.KOSI_SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.KOSI_SUPABASE_DB_PASSWORD }}

      - name: Generate Database Types
        # Use --project-id to connect to the remote Supabase instance
        run: supabase gen types typescript --project-id ${{ secrets.KOSI_SUPABASE_PROJECT_ID }} > ./src/types/database.types.ts --debug
        env:
          # Access token is needed to authenticate with the remote project
          SUPABASE_ACCESS_TOKEN: ${{ secrets.KOSI_SUPABASE_ACCESS_TOKEN }}

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          # Build-time environment variables are now pulled from Vercel via 'vercel pull'

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
